https://www.lintcode.com/problem/464/?fromId=9&_from=collection

public class Solution {
    public void sortIntegers2(int[] a) {
        // write your code here
        quickSort(a, 0, a.length-1);
    }

    private void quickSort(int[] A, int start ,int end){
        if(start >= end){
            return ;
        }

        int left = start, right = end;
        // 1. pivot = A/2
        int pivot = A[(start + end) / 2];
        // 2. left <= right , not <
        while(left <= right){
            // 3. A[left] <= pivot, not <!
            while(left <= right && A[left] <= pivot){
                left ++;
            }

            while(left <= right && A[right] >= pivot){
                right --;
            }

            if(left <= right){
                int temp = A[left];
                A[left] = A[right];
                A[right] = temp;

                left ++;
                right --;
            }
        }

        quickSort(A, start, right);
        quickSort(A, left, end);

    }
}