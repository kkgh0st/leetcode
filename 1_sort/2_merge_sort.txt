public class Solution {
    public void sortIntegers(int[] a) {
        // write your code here
        if(a == null || a.length ==0){
            return;
        }
        int[] temp = new int[a.length];
        mergeSort(a, 0, a.length-1, temp);
    }

    private void mergeSort(int[] A, int start, int end, int[] temp){
        if (start >= end){
            return ;
        }

        mergeSort(A,start, (start+end)/2, temp);
        mergeSort(A,(start+end)/2 + 1, end, temp);
        merge(A, start, end, temp);
    }

    public void merge(int[]A, int start, int end, int[] temp){
        int middle = (start + end)/2 + 1;
        int leftStart = start;
        int rightStart = middle + 1;
        int index = leftStart;
        while(leftStart <= middle && rightStart <= end){
            if(A[leftStart] < A[rightStart]){
                temp[index ++] = A[leftStart ++];
            }else{
                temp[index++] = A[rightStart ++];
            }
        }

        while(leftStart <= middle){
            temp[index ++] = A[leftStart ++];
        }

        while(rightStart <= end){
            temp[index++] = A[rightStart ++];
        }

        for(int i= start; i <= end; i ++){
            A[i] = temp[i];
        }
    }

}